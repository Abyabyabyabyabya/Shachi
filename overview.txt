「shachi」 プロジェクト概要

目的
 ゲームプログラミング技術と知識の幅を向上させる
 
考え
 自身の技術向上と、その土台を作る
  - 3Dの描画処理を実装したら、その先のシェーディングなどの土台になる。
 壊しながら完成度を高める
  - GitHubでバージョン管理をする。

ルール
 - Project -
  ・開発の流れは「仕様決定(バージョン内容決定) -> 実装 -> masterへコミット」
  ・バージョン仕様を specification.txt に必ず記述する。
  ・できるだけ同時並行を避け、１つ１つ着実に実装する。(実装順番が大切)
  ・次のバージョンへ向けたメモを to_next.txt に必ず残すこと。
  ・仕様の追加、削除、変更は必要のない限りは行わない。(to_next.txtにメモとして残す)
  ・概要の追加、削除、変更は必要のない限りは行わない。(to_next.txtにメモとして残す)

 - Coding -
  ・コーディング規約は学校で使用していたものを使用する。
  ・必要に応じてshachiプロジェクトルールを適用する。 
	例) class Hoge { using hoge_type = typename Types::hoge_type; };
  ・必ずコメントを付けること。

 - GitHub -
  ・バージョンは仕様毎に変更することとする。
  ・masterブランチは常にビルド、実行が可能なものとする。
  ・masterブランチへのコミットは、必ずバージョン番号をコミットメッセージに記述する。
  ・作業用ブランチ名は自由に決定してもよい。